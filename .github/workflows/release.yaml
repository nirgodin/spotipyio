name: release

on:
  pull_request:
    types: [ "closed" ]
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  should-run:
    name: Checking if job should run
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true

    steps:
    - uses: actions/checkout@v4
    - name: Filter files changed in PR
      id: filter
      uses: dorny/paths-filter@v2
      with:
        filters: |
          spotipyio:
            - 'spotipyio/**'

  build:
    name: Build distribution
    runs-on: ubuntu-latest
    needs: [ should-run ]
    if: ${{ needs.should-run.outputs.spotipyio == 'true' }}

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install pypa/build
        run: >-
          python3 -m
          pip install
          build
          --user
      - name: Build a binary wheel and a source tarball
        run: python3 -m build
      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  github-publish:
    name: Publishes to GitHub
    runs-on: ubuntu-latest
    needs: [ build ]

    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.merge_commit_sha }}
        fetch-depth: '0'

    - name: Filter files changed in PR
      id: filter
      uses: dorny/paths-filter@v2
      with:
        filters: |
          spotipyio:
            - 'spotipyio/**'

    - name: Get version from pyproject.toml
      id: get_version
      run: |
        PACKAGE_VERSION="v$(sed -n 's/^version = "\(.*\)"/\1/p' pyproject.toml)"
        echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_ENV

    - name: Bump version and push tag
      uses: anothrNick/github-tag-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        CUSTOM_TAG: ${{ env.PACKAGE_VERSION }}

    - name: Create release
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        automatic_release_tag: "latest"
        title: ${{ github.event.head_commit.message }}
        prerelease: false
        files: |
          *.gz

  pypi-publish:
    name: Publish to PyPI
    needs: [ build ]
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/spotipyio

    permissions:
      id-token: write

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
